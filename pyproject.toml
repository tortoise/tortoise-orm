[tool.poetry]
name = "tortoise-orm"
version = "0.19.3"
description = "Easy async ORM for python, built with relations in mind"
authors = ["Andrey Bondar <andrey@bondar.ru>", "Nickolas Grigoriadis <nagrigoriadis@gmail.com>", "long2ice <long2ice@gmail.com>"]
license = "Apache-2.0"
readme = "README.rst"
homepage = "https://github.com/tortoise/tortoise-orm"
repository = "https://github.com/tortoise/tortoise-orm.git"
documentation = "https://tortoise-orm.readthedocs.io"
keywords = ["sql", "mysql", "postgres", "psql", "sqlite", "aiosqlite", "asyncpg", "relational", "database", "rdbms", "orm", "object mapper", "async", "asyncio", "aio", "psycopg"]
packages = [
    { include = "tortoise" }
]
include = ["CHANGELOG.rst", "LICENSE", "README.rst"]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: PL/SQL",
    "Framework :: AsyncIO",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Database",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
]

[tool.poetry.dependencies]
python = "^3.7"
pypika-tortoise = "^0.1.6"
iso8601 = "^1.0.2"
aiosqlite = ">=0.16.0, <0.18.0"
pytz = "*"
ciso8601 = { version = "*", markers = "sys_platform != 'win32' and implementation_name == 'cpython'", optional = true }
uvloop = { version = "*", markers = "sys_platform != 'win32' and implementation_name == 'cpython'", optional = true }
orjson = { version = "*", optional = true }
asyncpg = { version = "*", optional = true }
aiomysql = { version = "*", optional = true }
asyncmy = { version = "^0.2.5", optional = true }
psycopg = { extras = ["pool", "binary"], version = "3.0.12", optional = true }
asyncodbc = { version = "^0.1.1", optional = true }

[tool.poetry.dev-dependencies]
# Linter tools
mypy = "*"
ruff = "*"
darglint = "*"
pylint = "*"
pygments = "*"
bandit = "*"
black = "*"
codespell = "*"
# Test tools
coveralls = "*"
pytest = "*"
pytest-xdist = "*"
pytest-cov = "*"
# Pypi
twine = "*"
# Sample integration - Quart
quart = "*"
# Sample integration - Sanic
sanic = "*"
# Sample integration - Starlette
starlette = "*"
# Pydantic support
pydantic = "*"
# FastAPI support
fastapi = "*"
asgi_lifespan = "*"
httpx = "*"
# Aiohttp support
aiohttp = "*"
# BlackSheep support
blacksheep = "^1.0.9"
# mypy
types-PyYAML = "*"
types-pytz = "*"
types-PyMySQL = "*"
# Documentation tools
sphinx-immaterial = "*"
sphinx-copybutton = "*"
Pygments = "*"
docutils = "*"

[tool.poetry.extras]
accel = ["ciso8601", "uvloop", "orjson"]
asyncpg = ["asyncpg"]
psycopg = ["psycopg"]
aiomysql = ["aiomysql"]
asyncmy = ["asyncmy"]
asyncodbc = ["asyncodbc"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"

[tool.black]
line-length = 100
target-version = ["py36", "py37", "py38", "py39"]

[tool.mypy]
pretty = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = false
warn_unused_configs = true
warn_unreachable = true
allow_redefinition = true
strict_equality = true
show_error_context = true

[[tool.mypy.overrides]]
module = ["tests.*"]
check_untyped_defs = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
warn_unreachable = false

[[tool.mypy.overrides]]
module = ["examples.*"]
check_untyped_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = ["tortoise.contrib.test.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = ["tortoise.contrib.sanic.*"]
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["conftest"]
disallow_untyped_defs = false

[[tool.mypy.overrides]]
module = ["tortoise.backends.base.client"]
disallow_untyped_defs = false

[tool.flake8]
ignore = "E203,E501,W503,DAR101,DAR201,DAR402"
max-line-length = 100
per-file-ignores = [
    "tortoise/__init__.py:F401",
    "tortoise/fields/__init__.py:F401",
    "tortoise/backends/base/client.py:DAR401,DAR202",
    "tortoise/contrib/test/__init__.py:DAR401",
]
docstring_style = "sphinx"

[tool.coverage.run]
branch = true
source = ["tortoise"]

[tool.coverage.report]
show_missing = true

[tool.ruff]
ignore = ["E501"]
